version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - "80:80"
    restart: always
    depends_on:
      django:
        condition: service_healthy
    networks:
      - app-network

  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    command: >
      sh -c "echo 'Waiting for MySQL...' && 
             while ! nc -z mysql 3306; do sleep 2; done && 
             echo 'MySQL is ready!' && 
             python manage.py makemigrations && 
             python manage.py migrate && 
             python manage.py collectstatic --noinput && 
             gunicorn project.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120 --keep-alive 2"
    env_file:
      - .env
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  mysql:
    image: mysql:8.0
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: book
      MYSQL_USER: appuser
      MYSQL_PASSWORD: apppass
      MYSQL_ROOT_HOST: '%'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

volumes:
  mysql_data:
  static_volume:
  media_volume:

networks:
  app-network:
    driver: bridge